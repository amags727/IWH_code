for (i in 1:100){
P_kl1_plus = print(full_filter(state_space_dim, P_kl1_plus, F_, Q, H_1, R_1, H_2, R_2))
print(P_kl1_plus )
}
z = 1
k = c(1,1)
delta = c(1,1)
alpha = .3
data = z*k^alpha + delta
P_kl1_plus = matrix(.5, nrow = 2 , ncol = 2)
#R_1  = diag(.8,2)
#R_2 = matrix(c(.3/data[1], 0 ,0,.8/data[2]),nrow =2 )
R_1  = diag(c(1e6,1e6))
R_2 = matrix(c(1e6, 0 ,0,1e6),nrow =2 )
H_1 = diag(state_space_dim)
H_2 = diag(state_space_dim)
F_ = matrix(c(.65,.3,.3, .65), nrow = 2)
Q = matrix(c(.2, 0,0,.3),nrow =2 )
state_space_dim = 2
for (i in 1:100){
P_kl1_plus = print(full_filter(state_space_dim, P_kl1_plus, F_, Q, H_1, R_1, H_2, R_2))
print(P_kl1_plus )
}
z = 1
k = c(1,1)
delta = c(1,1)
alpha = .3
data = z*k^alpha + delta
P_kl1_plus = matrix(.5, nrow = 2 , ncol = 2)
#R_1  = diag(.8,2)
#R_2 = matrix(c(.3/data[1], 0 ,0,.8/data[2]),nrow =2 )
R_1  = diag(c(1e6,1e6))
R_2 = matrix(c(1e6, 0 ,0,1e6),nrow =2 )
H_1 = diag(state_space_dim)
H_2 = diag(state_space_dim)
F_ = matrix(c(.65,.3,.3, .65), nrow = 2)
Q = matrix(c(.2, 0,0,.3),nrow =2 )
state_space_dim = 2
print(P_kl1_plus)
for (i in 1:100){
P_kl1_plus = print(full_filter(state_space_dim, P_kl1_plus, F_, Q, H_1, R_1, H_2, R_2))
}
print(P_kl1_plus )
z = 1
k = c(1,1)
delta = c(1,1)
alpha = .3
data = z*k^alpha + delta
P_kl1_plus = matrix(.5, nrow = 2 , ncol = 2)
#R_1  = diag(.8,2)
#R_2 = matrix(c(.3/data[1], 0 ,0,.8/data[2]),nrow =2 )
R_1  = diag(c(1e6,1e6))
R_2 = matrix(c(1e6, 0 ,0,1e6),nrow =2 )
H_1 = diag(state_space_dim)
H_2 = diag(state_space_dim)
F_ = matrix(c(.65,.3,.3, .65), nrow = 2)
Q = matrix(c(.2, 0,0,.3),nrow =2 )
state_space_dim = 2
print(P_kl1_plus)
for (i in 1:100){
P_kl1_plus = full_filter(state_space_dim, P_kl1_plus, F_, Q, H_1, R_1, H_2, R_2)
}
print(P_kl1_plus )
z = 1
k = c(1,1)
delta = c(1,1)
alpha = .3
data = z*k^alpha + delta
P_kl1_plus = matrix(.5, nrow = 2 , ncol = 2)
#R_1  = diag(.8,2)
#R_2 = matrix(c(.3/data[1], 0 ,0,.8/data[2]),nrow =2 )
R_1  = diag(c(1e6,1e6))
R_2 = matrix(c(1e6, 0 ,0,1e6),nrow =2 )
H_1 = diag(state_space_dim)
H_2 = diag(state_space_dim)
F_ = matrix(c(.65,0,0, .65), nrow = 2)
Q = matrix(c(.2, .1,.05,.3),nrow =2 )
state_space_dim = 2
print(P_kl1_plus)
for (i in 1:100){
P_kl1_plus = full_filter(state_space_dim, P_kl1_plus, F_, Q, H_1, R_1, H_2, R_2)
}
print(P_kl1_plus )
F_
z = 1
k = c(1,1)
delta = c(1,1)
alpha = .3
data = z*k^alpha + delta
P_kl1_plus = matrix(.5, nrow = 2 , ncol = 2)
#R_1  = diag(.8,2)
#R_2 = matrix(c(.3/data[1], 0 ,0,.8/data[2]),nrow =2 )
R_1  = diag(c(1e6,1e6))
R_2 = matrix(c(1e6, 0 ,0,1e6),nrow =2 )
H_1 = diag(state_space_dim)
H_2 = diag(state_space_dim)
F_ = matrix(c(.65,0,0, .65), nrow = 2)
Q = matrix(c(.2, .3,.05,.3),nrow =2 )
state_space_dim = 2
Q
print(P_kl1_plus)
for (i in 1:100){
P_kl1_plus = full_filter(state_space_dim, P_kl1_plus, F_, Q, H_1, R_1, H_2, R_2)
}
print(P_kl1_plus )
z = 1
k = c(1,1)
delta = c(1,1)
alpha = .3
data = z*k^alpha + delta
P_kl1_plus = matrix(.5, nrow = 2 , ncol = 2)
#R_1  = diag(.8,2)
#R_2 = matrix(c(.3/data[1], 0 ,0,.8/data[2]),nrow =2 )
R_1  = diag(c(1e6,1e6))
R_2 = matrix(c(1e6, 0 ,0,1e6),nrow =2 )
H_1 = diag(state_space_dim)
H_2 = diag(state_space_dim)
F_ = matrix(c(.65,0,0, .65), nrow = 2)
Q = matrix(c(.2, .05,.05,.3),nrow =2 )
state_space_dim = 2
print(P_kl1_plus)
for (i in 1:100){
P_kl1_plus = full_filter(state_space_dim, P_kl1_plus, F_, Q, H_1, R_1, H_2, R_2)
}
print(P_kl1_plus )
z = 1
k = c(1,1)
delta = c(1,1)
alpha = .3
data = z*k^alpha + delta
P_kl1_plus = matrix(.5, nrow = 2 , ncol = 2)
#R_1  = diag(.8,2)
#R_2 = matrix(c(.3/data[1], 0 ,0,.8/data[2]),nrow =2 )
R_1  = diag(c(1e6,1e6))
R_2 = matrix(c(1e6, 0 ,0,1e6),nrow =2 )
H_1 = diag(state_space_dim)
H_2 = diag(state_space_dim)
F_ = matrix(c(.65,0,0, .65), nrow = 2)
Q = matrix(c(.2, .0,.0,.3),nrow =2 )
state_space_dim = 2
print(P_kl1_plus)
for (i in 1:100){
P_kl1_plus = full_filter(state_space_dim, P_kl1_plus, F_, Q, H_1, R_1, H_2, R_2)
}
print(P_kl1_plus )
z = 1
k = c(1,1)
delta = c(1,1)
alpha = .3
data = z*k^alpha + delta
P_kl1_plus = matrix(.5, nrow = 2 , ncol = 2)
#R_1  = diag(.8,2)
#R_2 = matrix(c(.3/data[1], 0 ,0,.8/data[2]),nrow =2 )
R_1  = diag(c(1e6,1e6))
R_2 = matrix(c(1e6, 0 ,0,1e6),nrow =2 )
H_1 = diag(state_space_dim)
H_2 = diag(state_space_dim)
F_ = matrix(c(.65,0,0, .65), nrow = 2)
Q = matrix(c(.2, .03,.03,.3),nrow =2 )
state_space_dim = 2
print(P_kl1_plus)
for (i in 1:100){
P_kl1_plus = full_filter(state_space_dim, P_kl1_plus, F_, Q, H_1, R_1, H_2, R_2)
}
print(P_kl1_plus )
R_1  = diag(c(1e6,1e6))
R_2 = matrix(c(1e6, 0 ,0,1e6),nrow =2 )
H_1 = diag(state_space_dim)
H_2 = diag(state_space_dim)
F_ = matrix(c(.65,0,0, .65), nrow = 2)
Q = matrix(c(.2, .03,.03,.3),nrow =2 )
state_space_dim = 2
P_kl1_plus = matrix(.5, nrow = 2 , ncol = 2)
for (i in 1:100){
P_kl1_plus = full_filter(state_space_dim, P_kl1_plus, F_, Q, H_1, R_1, H_2, R_2)
}
print(P_kl1_plus )
P_kl1_plus = matrix(.5, nrow = 2 , ncol = 2)
print(P_kl1_plus)
for (i in 1:100){
P_kl1_plus = full_filter(state_space_dim, P_kl1_plus, F_, Q, H_1, R_1, H_2, R_2)
}
print(P_kl1_plus )
R_1
R_2
P_kl1_plus = matrix(.5, nrow = 2 , ncol = 2)
print(P_kl1_plus)
for (i in 1:100){
P_kl1_plus = full_filter(state_space_dim, P_kl1_plus, F_, Q, H_1, R_1, H_2, R_2)
}
print(P_kl1_plus )
P_kl1_plus = matrix(.5, nrow = 2 , ncol = 2)
#R_1  = diag(.8,2)
#R_2 = matrix(c(.3/data[1], 0 ,0,.8/data[2]),nrow =2 )
R_1  = diag(c(1e6,1e6))
R_2 = matrix(c(1e6, 0 ,0,1e6),nrow =2 )
H_1 = diag(state_space_dim)
H_2 = diag(state_space_dim)
F_ = matrix(c(.65,0,0, .65), nrow = 2)
Q = matrix(c(.2, 0,.03,.3),nrow =2 )
state_space_dim = 2
P_kl1_plus = matrix(.5, nrow = 2 , ncol = 2)
print(P_kl1_plus)
for (i in 1:100){
P_kl1_plus = full_filter(state_space_dim, P_kl1_plus, F_, Q, H_1, R_1, H_2, R_2)
}
print(P_kl1_plus )
F_ = matrix(c(.65,0,0, .65), nrow = 2)
Q = matrix(c(.2, .03,.03,.3),nrow =2 )
state_space_dim = 2
P_kl1_plus = matrix(.5, nrow = 2 , ncol = 2)
print(P_kl1_plus)
for (i in 1:100){
P_kl1_plus = full_filter(state_space_dim, P_kl1_plus, F_, Q, H_1, R_1, H_2, R_2)
}
print(P_kl1_plus )
R_1  = diag(c(1e6,1e6))
R_2 = matrix(c(1e6, 0 ,0,1e6),nrow =2 )
H_1 = diag(state_space_dim)
H_2 = diag(state_space_dim)
F_ = matrix(c(.65,0,0, .65), nrow = 2)
Q = matrix(c(.2, .05,.05,.3),nrow =2 )
state_space_dim = 2
P_kl1_plus = matrix(.5, nrow = 2 , ncol = 2)
print(P_kl1_plus)
for (i in 1:100){
P_kl1_plus = full_filter(state_space_dim, P_kl1_plus, F_, Q, H_1, R_1, H_2, R_2)
}
print(P_kl1_plus )
P_kl1_plus = matrix(.5, nrow = 2 , ncol = 2)
#R_1  = diag(.8,2)
#R_2 = matrix(c(.3/data[1], 0 ,0,.8/data[2]),nrow =2 )
R_1  = diag(c(1e6,1e6))
R_2 = matrix(c(1e6, 0 ,0,.1),nrow =2 )
H_1 = diag(state_space_dim)
H_2 = diag(state_space_dim)
F_ = matrix(c(.65,0,0, .65), nrow = 2)
Q = matrix(c(.2, .05,.05,.3),nrow =2 )
state_space_dim = 2
P_kl1_plus = matrix(.5, nrow = 2 , ncol = 2)
print(P_kl1_plus)
for (i in 1:100){
P_kl1_plus = full_filter(state_space_dim, P_kl1_plus, F_, Q, H_1, R_1, H_2, R_2)
}
print(P_kl1_plus )
R_1  = diag(c(1e6,1e6))
R_2 = matrix(c(1e6, 0 ,0,1e6),nrow =2 )
H_1 = diag(state_space_dim)
H_2 = diag(state_space_dim)
F_ = matrix(c(.65,0.2,0, .65), nrow = 2)
Q = matrix(c(.2, .0,.0,.3),nrow =2 )
state_space_dim = 2
P_kl1_plus = matrix(.5, nrow = 2 , ncol = 2)
print(P_kl1_plus)
for (i in 1:100){
P_kl1_plus = full_filter(state_space_dim, P_kl1_plus, F_, Q, H_1, R_1, H_2, R_2)
}
print(P_kl1_plus )
R_2 = matrix(c(1e6, 0 ,0,.01),nrow =2 )
P_kl1_plus = matrix(.5, nrow = 2 , ncol = 2)
for (i in 1:100){
P_kl1_plus = full_filter(state_space_dim, P_kl1_plus, F_, Q, H_1, R_1, H_2, R_2)
}
print(P_kl1_plus )
F_ = matrix(c(.65,0.2,.2, .65), nrow = 2)
Q = matrix(c(.2, .0,.0,.3),nrow =2 )
state_space_dim = 2
P_kl1_plus = matrix(.5, nrow = 2 , ncol = 2)
for (i in 1:100){
P_kl1_plus = full_filter(state_space_dim, P_kl1_plus, F_, Q, H_1, R_1, H_2, R_2)
}
print(P_kl1_plus )
R_2 = matrix(c(1e6, 0 ,0,.1e6),nrow =2 )
Q = matrix(c(.2, .02,.02,.3),nrow =2 )
F_ = matrix(c(.65,0,0, .65), nrow = 2)
Q = matrix(c(.2, .02,.02,.3),nrow =2 )
P_kl1_plus = matrix(.5, nrow = 2 , ncol = 2)
for (i in 1:100){
P_kl1_plus = full_filter(state_space_dim, P_kl1_plus, F_, Q, H_1, R_1, H_2, R_2)
}
print(P_kl1_plus )
R_2 = matrix(c(1e6, 0 ,0,.1e-1),nrow =2 )
R_2
P_kl1_plus = matrix(.5, nrow = 2 , ncol = 2)
for (i in 1:100){
P_kl1_plus = full_filter(state_space_dim, P_kl1_plus, F_, Q, H_1, R_1, H_2, R_2)
}
print(P_kl1_plus )
Q = matrix(c(.2, .1,.1,.3),nrow =2 )
state_space_dim = 2
P_kl1_plus = matrix(.5, nrow = 2 , ncol = 2)
for (i in 1:100){
P_kl1_plus = full_filter(state_space_dim, P_kl1_plus, F_, Q, H_1, R_1, H_2, R_2)
}
print(P_kl1_plus )
F_ = matrix(c(.65,.3,3, .65), nrow = 2)
Q = matrix(c(.2, 0,0,.3),nrow =2 )
state_space_dim = 2
P_kl1_plus = matrix(.5, nrow = 2 , ncol = 2)
for (i in 1:100){
P_kl1_plus = full_filter(state_space_dim, P_kl1_plus, F_, Q, H_1, R_1, H_2, R_2)
}
print(P_kl1_plus )
R_2 = matrix(c(1e6, 0 ,0,.1e6),nrow =2 )
P_kl1_plus = matrix(.5, nrow = 2 , ncol = 2)
for (i in 1:100){
P_kl1_plus = full_filter(state_space_dim, P_kl1_plus, F_, Q, H_1, R_1, H_2, R_2)
}
print(P_kl1_plus )
F_ = matrix(c(.65,.3,3, .65), nrow = 2)
Q = matrix(c(.2, 0,0,.3),nrow =2 )
state_space_dim = 2
P_kl1_plus = matrix(.5, nrow = 2 , ncol = 2)
for (i in 1:100){
P_kl1_plus = full_filter(state_space_dim, P_kl1_plus, F_, Q, H_1, R_1, H_2, R_2)
}
print(P_kl1_plus )
R_2 = matrix(c(1e6, 0 ,0,.1),nrow =2 )
P_kl1_plus = matrix(.5, nrow = 2 , ncol = 2)
for (i in 1:100){
P_kl1_plus = full_filter(state_space_dim, P_kl1_plus, F_, Q, H_1, R_1, H_2, R_2)
}
print(P_kl1_plus )
F_ = matrix(c(.65,.3,3, .65), nrow = 2)
Q = matrix(c(.2, 0,0,.3),nrow =2 )
state_space_dim = 2
P_kl1_plus = matrix(.5, nrow = 2 , ncol = 2)
for (i in 1:100){
P_kl1_plus = full_filter(state_space_dim, P_kl1_plus, F_, Q, H_1, R_1, H_2, R_2)
}
print(P_kl1_plus
)
R_1  = diag(c(1e6,1e6))
R_2 = matrix(c(1e6, 0 ,0,10),nrow =2 )
H_1 = diag(state_space_dim)
H_2 = diag(state_space_dim)
F_ = matrix(c(.65,.3,3, .65), nrow = 2)
Q = matrix(c(.2, 0,0,.3),nrow =2 )
state_space_dim = 2
P_kl1_plus = matrix(.5, nrow = 2 , ncol = 2)
for (i in 1:100){
P_kl1_plus = full_filter(state_space_dim, P_kl1_plus, F_, Q, H_1, R_1, H_2, R_2)
}
print(P_kl1_plus )
R_2 = matrix(c(1e6, 0 ,0,1e6),nrow =2 )
H_1 = diag(state_space_dim)
H_2 = diag(state_space_dim)
F_ = matrix(c(.65,.3,3, .65), nrow = 2)
Q = matrix(c(.2, 0,0,.3),nrow =2 )
state_space_dim = 2
P_kl1_plus = matrix(.5, nrow = 2 , ncol = 2)
for (i in 1:100){
P_kl1_plus = full_filter(state_space_dim, P_kl1_plus, F_, Q, H_1, R_1, H_2, R_2)
}
print(P_kl1_plus )
F_ = matrix(c(.65,.3,3, .65), nrow = 2)
Q = matrix(c(.2, 0,0,.3),nrow =2 )
state_space_dim = 2
P_kl1_plus = matrix(.5, nrow = 2 , ncol = 2)
for (i in 1:100){
P_kl1_plus = full_filter(state_space_dim, P_kl1_plus, F_, Q, H_1, R_1, H_2, R_2)
}
print(P_kl1_plus )
R_2 = matrix(c(1e6, 0 ,0,1e6),nrow =2 )
H_1 = diag(state_space_dim)
H_2 = diag(state_space_dim)
F_ = matrix(c(.65,.3,.3, .65), nrow = 2)
Q = matrix(c(.2, 0,0,.3),nrow =2 )
state_space_dim = 2
P_kl1_plus = matrix(.5, nrow = 2 , ncol = 2)
for (i in 1:100){
P_kl1_plus = full_filter(state_space_dim, P_kl1_plus, F_, Q, H_1, R_1, H_2, R_2)
}
print(P_kl1_plus )
R_2 = matrix(c(1e6, 0 ,0,1e-1),nrow =2 )
P_kl1_plus = matrix(.5, nrow = 2 , ncol = 2)
for (i in 1:100){
P_kl1_plus = full_filter(state_space_dim, P_kl1_plus, F_, Q, H_1, R_1, H_2, R_2)
}
print(P_kl1_plus )
#F_ = matrix(c(.65,.3,.3, .65), nrow = 2)
F_ = matrix(c(.65,0,0, .65), nrow = 2)
F_ = matrix(c(.65,0,0, .65), nrow = 2)
Q = matrix(c(.2, .05,.05,.3),nrow =2 )
state_space_dim = 2
P_kl1_plus = matrix(.5, nrow = 2 , ncol = 2)
for (i in 1:100){
P_kl1_plus = full_filter(state_space_dim, P_kl1_plus, F_, Q, H_1, R_1, H_2, R_2)
}
print(P_kl1_plus )
R_2 = matrix(c(1e6, 0 ,0,1e6),nrow =2 )
P_kl1_plus = matrix(.5, nrow = 2 , ncol = 2)
for (i in 1:100){
P_kl1_plus = full_filter(state_space_dim, P_kl1_plus, F_, Q, H_1, R_1, H_2, R_2)
}
print(P_kl1_plus )
F_ = matrix(c(.95,0,0, .95), nrow = 2)
Q = matrix(c(.2, .05,.05,.3),nrow =2 )
state_space_dim = 2
P_kl1_plus = matrix(.5, nrow = 2 , ncol = 2)
for (i in 1:100){
P_kl1_plus = full_filter(state_space_dim, P_kl1_plus, F_, Q, H_1, R_1, H_2, R_2)
}
print(P_kl1_plus )
R_2 = matrix(c(1e6, 0 ,0,1e-1),nrow =2 )
P_kl1_plus = matrix(.5, nrow = 2 , ncol = 2)
for (i in 1:100){
P_kl1_plus = full_filter(state_space_dim, P_kl1_plus, F_, Q, H_1, R_1, H_2, R_2)
}
print(P_kl1_plus )
F_ = matrix(c(.65,.3,.3, .65), nrow = 2)
Q = matrix(c(.2, 0,0,.3),nrow =2 )
# setup -------------------------------------------------------------------
rm(list = ls())
library(tidyverse)
library(rstudioapi)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# generate biannual data  -------------------------------------------------
raw_data = read.csv("figure W-1.csv")
### Establishment Level
i = 2006
estab_level_biannual_data = raw_data %>% filter(year == i | year== i+1) %>%
distinct(estab_num) %>% mutate(year_l1 = i, year = i+1) %>%
left_join(raw_data,
by = c("estab_num", "year_l1" = "year")) %>%
replace_na(list(employees = 0))  %>% rename(firm_id_l1= firm_id, employees_l1 =employees) %>%
left_join(raw_data, by = c("estab_num", "year"))  %>%  replace_na(list(employees = 0)) %>%
mutate(X = (employees + employees_l1)/2,
X_total = sum(X),
X_share = X/ X_total,
g =  (employees - employees_l1)/X,
status =  if_else(g== -2, "died",if_else(g==2,"born","continuer")),
firm_id = if_else(is.na(firm_id), firm_id_l1, firm_id))   %>%  arrange(estab_num)
### Firm Level
firm_level_biennial = estab_level_biannual %>% group_by(firm_id) %>%
summarize(g = weighted.mean(g, X, na.rm = TRUE),
X_share = sum(X_share, na.rm =  TRUE) ) %>%
mutate(year_l1 = i, year = i+1,
biennial= paste(as.character(i), "-",as.character(i+1)))
# setup -------------------------------------------------------------------
rm(list = ls())
library(tidyverse)
library(rstudioapi)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# generate biannual data  -------------------------------------------------
raw_data = read.csv("figure W-1.csv")
### Establishment Level
i = 2006
estab_level_biannual_data = raw_data %>% filter(year == i | year== i+1) %>%
distinct(estab_num) %>% mutate(year_l1 = i, year = i+1) %>%
left_join(raw_data,
by = c("estab_num", "year_l1" = "year")) %>%
replace_na(list(employees = 0))  %>% rename(firm_id_l1= firm_id, employees_l1 =employees) %>%
left_join(raw_data, by = c("estab_num", "year"))  %>%  replace_na(list(employees = 0)) %>%
mutate(X = (employees + employees_l1)/2,
X_total = sum(X),
X_share = X/ X_total,
g =  (employees - employees_l1)/X,
status =  if_else(g== -2, "died",if_else(g==2,"born","continuer")),
firm_id = if_else(is.na(firm_id), firm_id_l1, firm_id))   %>%  arrange(estab_num)
### Firm Level
firm_level_biennial = estab_level_biannual_data %>% group_by(firm_id) %>%
summarize(g = weighted.mean(g, X, na.rm = TRUE),
X_share = sum(X_share, na.rm =  TRUE) ) %>%
mutate(year_l1 = i, year = i+1,
biennial= paste(as.character(i), "-",as.character(i+1)))
# generate growth rate decomps  -------------------------------------------------
## by category at the establishment level
growth_rate_by_category_estab_level = estab_level_biannual %>% group_by(status) %>%
summarize(g = sum(g* X_share))  %>%
mutate(year_l1 = i, year = i+1,
biennial= paste(as.character(i), "-",as.character(i+1) ))
# setup -------------------------------------------------------------------
rm(list = ls())
library(tidyverse)
library(rstudioapi)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# generate biannual data  -------------------------------------------------
raw_data = read.csv("figure W-1.csv")
### Establishment Level
i = 2006
estab_level_biannual = raw_data %>% filter(year == i | year== i+1) %>%
distinct(estab_num) %>% mutate(year_l1 = i, year = i+1) %>%
left_join(raw_data,
by = c("estab_num", "year_l1" = "year")) %>%
replace_na(list(employees = 0))  %>% rename(firm_id_l1= firm_id, employees_l1 =employees) %>%
left_join(raw_data, by = c("estab_num", "year"))  %>%  replace_na(list(employees = 0)) %>%
mutate(X = (employees + employees_l1)/2,
X_total = sum(X),
X_share = X/ X_total,
g =  (employees - employees_l1)/X,
status =  if_else(g== -2, "died",if_else(g==2,"born","continuer")),
firm_id = if_else(is.na(firm_id), firm_id_l1, firm_id))   %>%  arrange(estab_num)
### Firm Level
firm_level_biennial = estab_level_biannual %>% group_by(firm_id) %>%
summarize(g = weighted.mean(g, X, na.rm = TRUE),
X_share = sum(X_share, na.rm =  TRUE) ) %>%
mutate(year_l1 = i, year = i+1,
biennial= paste(as.character(i), "-",as.character(i+1)))
# generate growth rate decomps  -------------------------------------------------
## by category at the establishment level
growth_rate_by_category_estab_level = estab_level_biannual %>% group_by(status) %>%
summarize(g = sum(g* X_share))  %>%
mutate(year_l1 = i, year = i+1,
biennial= paste(as.character(i), "-",as.character(i+1) ))
## by category at the firm level
growth_rate_by_category_firm_level = firm_level_biennial %>% mutate(
status =  if_else(g== -2, "died",if_else(g==2,"born","continuer"))) %>%
group_by(status) %>%
summarize(g = sum(g*X_share))
growth_rate_by_category_firm_level
growth_rate_by_category_estab_level
